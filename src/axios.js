import axios from 'axios'

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
const api = axios.create({
  baseURL: 'https://localhost:7018',
  withCredentials: true, // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—É–∫–∞–º–∏
})

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
const getToken = () => {
  return localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken')
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É
api.interceptors.request.use((config) => {
  const token = getToken()

  if (token) {
    config.headers.Authorization = `Bearer ${token}`
  }

  return config
})

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
api.interceptors.response.use(
  (response) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–≥–æ access —Ç–æ–∫–µ–Ω–∞
    const newAccessToken = response.headers['x-new-access-token']

    if (newAccessToken) {
      console.log('üîÑ –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π access —Ç–æ–∫–µ–Ω')

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω
      const storage = localStorage.getItem('accessToken') ? localStorage : sessionStorage

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
      storage.setItem('accessToken', newAccessToken)

      // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      api.defaults.headers.common['Authorization'] = `Bearer ${newAccessToken}`
    }

    return response
  },
  (error) => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (error.response?.status === 401) {
      console.log('‚ùå –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –æ—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω—ã')

      // –û—á–∏—â–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      localStorage.removeItem('accessToken')
      sessionStorage.removeItem('accessToken')

      // –£–¥–∞–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      delete api.defaults.headers.common['Authorization']

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ (–µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è —Ç–∞–º —É–∂–µ)
      if (window.location.pathname !== '/auth/login') {
        window.location.href = '/auth/login'
      }
    }

    return Promise.reject(error)
  },
)

export default api
